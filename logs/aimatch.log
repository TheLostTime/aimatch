2025-07-16 11:15:10.732 [main] INFO  com.example.AimatchApplication - Starting AimatchApplication using Java 1.8.0_131 on wk with PID 12620 (D:\指标建设\AIMatch\aimatch\target\classes started by wk794 in D:\指标建设\AIMatch\aimatch)
2025-07-16 11:15:10.729 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-16 11:15:10.735 [main] DEBUG com.example.AimatchApplication - Running with Spring Boot v2.7.15, Spring v5.3.29
2025-07-16 11:15:10.735 [main] INFO  com.example.AimatchApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 11:15:11.443 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-16 11:15:11.445 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-16 11:15:11.467 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-16 11:15:11.903 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8088 (http)
2025-07-16 11:15:11.908 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
2025-07-16 11:15:11.908 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 11:15:11.908 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.79]
2025-07-16 11:15:12.004 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 11:15:12.006 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1239 ms
2025-07-16 11:15:12.401 [main] WARN  c.b.m.core.metadata.TableInfoHelper - Can not find table primary key in Class: "com.example.entity.TImMessage".
2025-07-16 11:15:12.401 [main] WARN  c.b.m.c.injector.DefaultSqlInjector - class com.example.entity.TImMessage ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2025-07-16 11:15:13.462 [main] INFO  com.example.config.Knife4jConfig - http://localhost:8088/doc.html
2025-07-16 11:15:14.254 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8088"]
2025-07-16 11:15:14.262 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8088 (http) with context path ''
2025-07-16 11:15:14.518 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.520 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:15:14.573 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.573 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.573 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.573 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.579 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.579 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:15:14.579 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.645 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.645 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.645 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.691 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.691 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:15:14.691 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.691 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:15:14.694 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: HrJoinCompanyReq, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.694 [main] WARN  s.d.b.BodyParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:15:14.694 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:15:14.694 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:15:14.768 [main] INFO  com.example.AimatchApplication - Started AimatchApplication in 4.384 seconds (JVM running for 6.069)
2025-07-16 11:15:36.350 [http-nio-8088-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 11:15:36.350 [http-nio-8088-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 11:15:36.350 [http-nio-8088-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-16 11:22:57.295 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-16 11:22:57.295 [main] INFO  com.example.AimatchApplication - Starting AimatchApplication using Java 1.8.0_131 on wk with PID 7676 (D:\指标建设\AIMatch\aimatch\target\classes started by wk794 in D:\指标建设\AIMatch\aimatch)
2025-07-16 11:22:57.295 [main] DEBUG com.example.AimatchApplication - Running with Spring Boot v2.7.15, Spring v5.3.29
2025-07-16 11:22:57.295 [main] INFO  com.example.AimatchApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 11:22:57.896 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-16 11:22:57.896 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-16 11:22:57.918 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-16 11:22:58.302 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8088 (http)
2025-07-16 11:22:58.305 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
2025-07-16 11:22:58.308 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 11:22:58.308 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.79]
2025-07-16 11:22:58.393 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 11:22:58.393 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1066 ms
2025-07-16 11:22:58.768 [main] WARN  c.b.m.core.metadata.TableInfoHelper - Can not find table primary key in Class: "com.example.entity.TImMessage".
2025-07-16 11:22:58.768 [main] WARN  c.b.m.c.injector.DefaultSqlInjector - class com.example.entity.TImMessage ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2025-07-16 11:22:59.846 [main] INFO  com.example.config.Knife4jConfig - http://localhost:8088/doc.html
2025-07-16 11:23:00.552 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8088"]
2025-07-16 11:23:00.561 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8088 (http) with context path ''
2025-07-16 11:23:00.809 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.814 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:23:00.868 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.868 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.868 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.868 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.871 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.871 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:23:00.871 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.935 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.938 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.938 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.981 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.981 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:23:00.981 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:23:00.981 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:23:01.054 [main] INFO  com.example.AimatchApplication - Started AimatchApplication in 4.069 seconds (JVM running for 4.683)
2025-07-16 11:23:12.827 [http-nio-8088-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 11:23:12.827 [http-nio-8088-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 11:23:12.828 [http-nio-8088-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-16 11:27:53.423 [http-nio-8088-exec-6] INFO  c.example.controller.AuthController - 接收注册请求: wk3
2025-07-16 11:27:53.440 [http-nio-8088-exec-6] INFO  c.e.service.impl.TUserServiceImpl - 查找用户: wk3
2025-07-16 11:27:53.578 [http-nio-8088-exec-6] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 11:27:53.935 [http-nio-8088-exec-6] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 11:27:53.952 [http-nio-8088-exec-6] DEBUG c.e.mapper.TUserMapper.selectList - ==>  Preparing: SELECT user_id,user_type,account,password,avatar FROM t_user WHERE (account = ?)
2025-07-16 11:27:54.000 [http-nio-8088-exec-6] DEBUG c.e.mapper.TUserMapper.selectList - ==> Parameters: wk3(String)
2025-07-16 11:27:54.044 [http-nio-8088-exec-6] DEBUG c.e.mapper.TUserMapper.selectList - <==      Total: 0
2025-07-16 11:27:54.064 [http-nio-8088-exec-6] DEBUG c.example.mapper.TUserMapper.insert - ==>  Preparing: INSERT INTO t_user ( user_id, user_type, account, password, avatar ) VALUES ( ?, ?, ?, ?, ? )
2025-07-16 11:27:54.064 [http-nio-8088-exec-6] DEBUG c.example.mapper.TUserMapper.insert - ==> Parameters: 1945324484159746050(String), (String), wk3(String), 4ae43a1ed97c212d846b8aad9ab8bd5726ce9ce2c169baa77ee27f3fd9807270(String), (String)
2025-07-16 11:27:54.075 [http-nio-8088-exec-6] DEBUG c.example.mapper.TUserMapper.insert - <==    Updates: 1
2025-07-16 11:27:54.075 [http-nio-8088-exec-6] INFO  c.e.service.impl.TUserServiceImpl - 用户注册成功: wk3
2025-07-16 11:28:08.598 [http-nio-8088-exec-8] INFO  c.example.controller.AuthController - 接收登录请求: wk3
2025-07-16 11:28:08.598 [http-nio-8088-exec-8] INFO  c.e.service.impl.TUserServiceImpl - 查找用户: wk3
2025-07-16 11:28:08.602 [http-nio-8088-exec-8] DEBUG c.e.mapper.TUserMapper.selectList - ==>  Preparing: SELECT user_id,user_type,account,password,avatar FROM t_user WHERE (account = ?)
2025-07-16 11:28:08.605 [http-nio-8088-exec-8] DEBUG c.e.mapper.TUserMapper.selectList - ==> Parameters: wk3(String)
2025-07-16 11:28:08.613 [http-nio-8088-exec-8] DEBUG c.e.mapper.TUserMapper.selectList - <==      Total: 1
2025-07-16 11:28:08.628 [http-nio-8088-exec-8] INFO  c.e.service.impl.TUserServiceImpl - 用户登录成功: wk3
2025-07-16 11:29:16.516 [http-nio-8088-exec-10] DEBUG c.e.mapper.THrMapper.selectById - ==>  Preparing: SELECT user_id,name,title,company_id,vip_type,real_name FROM t_hr WHERE user_id=?
2025-07-16 11:29:16.516 [http-nio-8088-exec-10] DEBUG c.e.mapper.THrMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:29:16.525 [http-nio-8088-exec-10] DEBUG c.e.mapper.THrMapper.selectById - <==      Total: 0
2025-07-16 11:29:46.309 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s266ms103µs900ns).
2025-07-16 11:29:46.312 [http-nio-8088-exec-10] DEBUG c.e.mapper.TCompanyMapper.insert - ==>  Preparing: INSERT INTO t_company ( company_id, company_name, industry, scale, enterprise_certified, enterprise_license, incumbency_certificate ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-16 11:29:46.312 [http-nio-8088-exec-10] DEBUG c.e.mapper.TCompanyMapper.insert - ==> Parameters: 1945324954974564354(String), 文化传媒(String), 服务(String), 2(String), WAITING(String), (String), (String)
2025-07-16 11:29:46.315 [http-nio-8088-exec-10] DEBUG c.e.mapper.TCompanyMapper.insert - <==    Updates: 1
2025-07-16 11:29:46.324 [http-nio-8088-exec-10] DEBUG c.e.mapper.THrMapper.selectById - ==>  Preparing: SELECT user_id,name,title,company_id,vip_type,real_name FROM t_hr WHERE user_id=?
2025-07-16 11:29:46.324 [http-nio-8088-exec-10] DEBUG c.e.mapper.THrMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:29:46.327 [http-nio-8088-exec-10] DEBUG c.e.mapper.THrMapper.selectById - <==      Total: 0
2025-07-16 11:29:46.328 [http-nio-8088-exec-10] DEBUG com.example.mapper.THrMapper.insert - ==>  Preparing: INSERT INTO t_hr ( user_id, name, title, company_id, vip_type, real_name ) VALUES ( ?, ?, ?, ?, ?, ? )
2025-07-16 11:29:46.328 [http-nio-8088-exec-10] DEBUG com.example.mapper.THrMapper.insert - ==> Parameters: 1945324484159746050(String), 测试HR(String), 经理(String), 1945324954974564354(String), NO(String), 2(Integer)
2025-07-16 11:29:46.331 [http-nio-8088-exec-10] DEBUG com.example.mapper.THrMapper.insert - <==    Updates: 1
2025-07-16 11:29:46.807 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 11:29:46.816 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 11:29:50.940 [main] INFO  com.example.AimatchApplication - Starting AimatchApplication using Java 1.8.0_131 on wk with PID 10184 (D:\指标建设\AIMatch\aimatch\target\classes started by wk794 in D:\指标建设\AIMatch\aimatch)
2025-07-16 11:29:50.940 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-07-16 11:29:50.940 [main] DEBUG com.example.AimatchApplication - Running with Spring Boot v2.7.15, Spring v5.3.29
2025-07-16 11:29:50.940 [main] INFO  com.example.AimatchApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 11:29:51.545 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-16 11:29:51.547 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-16 11:29:51.565 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-07-16 11:29:51.945 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8088 (http)
2025-07-16 11:29:51.951 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8088"]
2025-07-16 11:29:51.951 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 11:29:51.951 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.79]
2025-07-16 11:29:52.039 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 11:29:52.039 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1067 ms
2025-07-16 11:29:52.391 [main] WARN  c.b.m.core.metadata.TableInfoHelper - Can not find table primary key in Class: "com.example.entity.TImMessage".
2025-07-16 11:29:52.391 [main] WARN  c.b.m.c.injector.DefaultSqlInjector - class com.example.entity.TImMessage ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2025-07-16 11:29:53.393 [main] INFO  com.example.config.Knife4jConfig - http://localhost:8088/doc.html
2025-07-16 11:29:54.093 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8088"]
2025-07-16 11:29:54.103 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8088 (http) with context path ''
2025-07-16 11:29:54.363 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.366 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:29:54.417 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.417 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.417 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.417 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.420 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.420 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:29:54.423 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.486 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.486 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.486 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: string, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.528 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.528 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:29:54.528 [main] WARN  s.d.s.r.o.OperationImplicitParameterReader - Unable to interpret the implicit parameter configuration with dataType: file, dataTypeClass: class java.lang.Void
2025-07-16 11:29:54.528 [main] WARN  s.d.b.FormParameterSpecificationProvider - Parameter should either be a simple or a content type
2025-07-16 11:29:54.602 [main] INFO  com.example.AimatchApplication - Started AimatchApplication in 3.963 seconds (JVM running for 4.673)
2025-07-16 11:29:59.712 [http-nio-8088-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 11:29:59.712 [http-nio-8088-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 11:29:59.712 [http-nio-8088-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-16 11:29:59.764 [http-nio-8088-exec-1] INFO  c.example.controller.AuthController - 接收登录请求: wk3
2025-07-16 11:29:59.769 [http-nio-8088-exec-1] INFO  c.e.service.impl.TUserServiceImpl - 查找用户: wk3
2025-07-16 11:29:59.814 [http-nio-8088-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 11:29:59.909 [http-nio-8088-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 11:29:59.915 [http-nio-8088-exec-1] DEBUG c.e.mapper.TUserMapper.selectList - ==>  Preparing: SELECT user_id,user_type,account,password,avatar FROM t_user WHERE (account = ?)
2025-07-16 11:29:59.928 [http-nio-8088-exec-1] DEBUG c.e.mapper.TUserMapper.selectList - ==> Parameters: wk3(String)
2025-07-16 11:29:59.943 [http-nio-8088-exec-1] DEBUG c.e.mapper.TUserMapper.selectList - <==      Total: 1
2025-07-16 11:29:59.951 [http-nio-8088-exec-1] INFO  c.e.service.impl.TUserServiceImpl - 用户登录成功: wk3
2025-07-16 11:30:04.011 [http-nio-8088-exec-2] DEBUG c.e.mapper.TUserMapper.selectById - ==>  Preparing: SELECT user_id,user_type,account,password,avatar FROM t_user WHERE user_id=?
2025-07-16 11:30:04.013 [http-nio-8088-exec-2] DEBUG c.e.mapper.TUserMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:30:04.018 [http-nio-8088-exec-2] DEBUG c.e.mapper.TUserMapper.selectById - <==      Total: 1
2025-07-16 11:30:04.693 [http-nio-8088-exec-2] DEBUG c.e.mapper.THrMapper.selectById - ==>  Preparing: SELECT user_id,name,title,company_id,vip_type,real_name FROM t_hr WHERE user_id=?
2025-07-16 11:30:04.696 [http-nio-8088-exec-2] DEBUG c.e.mapper.THrMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:30:04.701 [http-nio-8088-exec-2] DEBUG c.e.mapper.THrMapper.selectById - <==      Total: 1
2025-07-16 11:30:21.662 [http-nio-8088-exec-2] ERROR c.e.exception.GlobalExceptionHandler - 业务异常: 您已经加入公司了
com.example.exception.BusinessException: 您已经加入公司了
	at com.example.service.impl.TCompanyServiceImpl.joinCompany(TCompanyServiceImpl.java:90)
	at com.example.service.impl.TCompanyServiceImpl$$FastClassBySpringCGLIB$$d94c0b48.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.TCompanyServiceImpl$$EnhancerBySpringCGLIB$$197c1c60.joinCompany(<generated>)
	at com.example.controller.HRController.join(HRController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2025-07-16 11:31:26.068 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.selectById - ==>  Preparing: SELECT user_id,user_type,account,password,avatar FROM t_user WHERE user_id=?
2025-07-16 11:31:26.070 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:31:26.073 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.selectById - <==      Total: 1
2025-07-16 11:31:26.832 [http-nio-8088-exec-4] DEBUG c.e.mapper.THrMapper.selectById - ==>  Preparing: SELECT user_id,name,title,company_id,vip_type,real_name FROM t_hr WHERE user_id=?
2025-07-16 11:31:26.832 [http-nio-8088-exec-4] DEBUG c.e.mapper.THrMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:31:26.834 [http-nio-8088-exec-4] DEBUG c.e.mapper.THrMapper.selectById - <==      Total: 0
2025-07-16 11:31:30.149 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.selectById - ==>  Preparing: SELECT user_id,user_type,account,password,avatar FROM t_user WHERE user_id=?
2025-07-16 11:31:30.151 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:31:30.154 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.selectById - <==      Total: 1
2025-07-16 11:31:30.160 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.updateById - ==>  Preparing: UPDATE t_user SET user_type=?, account=?, password=?, avatar=? WHERE user_id=?
2025-07-16 11:31:30.160 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.updateById - ==> Parameters: 1(String), wk3(String), 4ae43a1ed97c212d846b8aad9ab8bd5726ce9ce2c169baa77ee27f3fd9807270(String), (String), 1945324484159746050(String)
2025-07-16 11:31:30.183 [http-nio-8088-exec-4] DEBUG c.e.mapper.TUserMapper.updateById - <==    Updates: 1
2025-07-16 11:31:32.498 [http-nio-8088-exec-4] DEBUG c.e.mapper.TCompanyMapper.insert - ==>  Preparing: INSERT INTO t_company ( company_id, company_name, industry, scale, enterprise_certified, enterprise_license, incumbency_certificate ) VALUES ( ?, ?, ?, ?, ?, ?, ? )
2025-07-16 11:31:32.500 [http-nio-8088-exec-4] DEBUG c.e.mapper.TCompanyMapper.insert - ==> Parameters: 1945325400350953473(String), 文化传媒(String), 服务(String), 2(String), WAITING(String), (String), (String)
2025-07-16 11:31:32.502 [http-nio-8088-exec-4] DEBUG c.e.mapper.TCompanyMapper.insert - <==    Updates: 1
2025-07-16 11:31:32.504 [http-nio-8088-exec-4] DEBUG c.e.mapper.THrMapper.selectById - ==>  Preparing: SELECT user_id,name,title,company_id,vip_type,real_name FROM t_hr WHERE user_id=?
2025-07-16 11:31:32.504 [http-nio-8088-exec-4] DEBUG c.e.mapper.THrMapper.selectById - ==> Parameters: 1945324484159746050(String)
2025-07-16 11:31:32.506 [http-nio-8088-exec-4] DEBUG c.e.mapper.THrMapper.selectById - <==      Total: 0
2025-07-16 11:31:32.508 [http-nio-8088-exec-4] DEBUG com.example.mapper.THrMapper.insert - ==>  Preparing: INSERT INTO t_hr ( user_id, name, title, company_id, vip_type, real_name ) VALUES ( ?, ?, ?, ?, ?, ? )
2025-07-16 11:31:32.508 [http-nio-8088-exec-4] DEBUG com.example.mapper.THrMapper.insert - ==> Parameters: 1945324484159746050(String), 测试HR(String), 经理(String), 1945325400350953473(String), NO(String), 2(Integer)
2025-07-16 11:31:32.508 [http-nio-8088-exec-4] DEBUG com.example.mapper.THrMapper.insert - <==    Updates: 1
