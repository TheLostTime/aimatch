<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.TPositionMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.TPosition">
    <!--@mbg.generated-->
    <!--@Table t_position-->
    <id column="position_id" jdbcType="VARCHAR" property="positionId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="position_type" jdbcType="VARCHAR" property="positionType" />
    <result column="position_status" jdbcType="INTEGER" property="positionStatus" />
    <result column="work_type" jdbcType="VARCHAR" property="workType" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="position_description" jdbcType="LONGVARCHAR" property="positionDescription" />
    <result column="job_category" jdbcType="VARCHAR" property="jobCategory" />
    <result column="degree_lower_limit" jdbcType="INTEGER" property="degreeLowerLimit" />
    <result column="experience_lower_limit" jdbcType="INTEGER" property="experienceLowerLimit" />
    <result column="salary_lower_limit" jdbcType="INTEGER" property="salaryLowerLimit" />
    <result column="salary_upper_limit" jdbcType="INTEGER" property="salaryUpperLimit" />
    <result column="salary_month" jdbcType="INTEGER" property="salaryMonth" />
    <result column="work_place" jdbcType="VARCHAR" property="workPlace" />
    <result column="is_oversea" jdbcType="INTEGER" property="isOversea" />
    <result column="oversea_remainder" jdbcType="INTEGER" property="overseaRemainder" />
    <result column="position_num" jdbcType="INTEGER" property="positionNum" />
    <result column="position_num" jdbcType="INTEGER" property="positionNum" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.example.resp.GetJobListResp">
    <id property="positionId" column="position_id"/>
    <!-- 映射 t_position 到 tPosition 属性 -->
    <association property="tPosition" resultMap="com.example.mapper.TPositionMapper.BaseResultMap"/>
    <!-- 映射 t_user 到 tUser 属性 -->
    <association property="tUser" resultMap="com.example.mapper.TUserMapper.BaseResultMap"/>
    <!-- 映射 t_company 到 tCompany 属性 -->
    <association property="tCompany" resultMap="com.example.mapper.TCompanyMapper.BaseResultMap"/>
    <!-- 映射 t_hr 到 tHr 属性 -->
    <association property="tHr" resultMap="com.example.mapper.THrMapper.BaseResultMap"/>
    <!-- 映射 t_position_toolbox 到 tPositionToolbox 属性 -->
    <association property="tPositionToolbox" resultMap="com.example.mapper.TPositionToolboxMapper.BaseResultMap2"/>
    <!-- 映射 t_position_key_word 到 keyWords 属性 -->
    <collection property="keyWords"  ofType="com.example.entity.TPositionKeyWord"
    resultMap="com.example.mapper.TPositionKeyWordMapper.BaseResultMap"/>
  </resultMap>

<sql id="Base_Column_List">
    <!--@mbg.generated-->
    a.position_id, a.user_id,a.position_type, a.position_status, a.work_type, a.position_name, a.position_description,
    a.job_category, a.degree_lower_limit, a.experience_lower_limit, a.salary_lower_limit, a.salary_upper_limit,
    a.salary_month, a.work_place, a.is_oversea, a.oversea_remainder, a.position_num, a.update_time
</sql>

  <select id="queryOfflinePosition" resultMap="BaseResultMap">
        select  * from t_position where
        position_status = 2
        and update_time &lt;= date_sub(now(),interval #{offlineDay} day)
  </select>

  <select id="getPositonInfoByReq" resultMap="BaseResultMap2">
        select
               a.position_id, a.user_id, a.position_type, a.position_status,
               a.work_type, a.position_name, a.position_description, a.job_category,
               a.degree_lower_limit, a.experience_lower_limit, a.salary_lower_limit,
               a.salary_upper_limit, a.salary_month, a.work_place, a.is_oversea,
               a.oversea_remainder, a.position_num, a.update_time, a.reason,
               b.user_type, b.account,
               d.name, d.title, d.company_id, d.vip_type, d.real_name,
               c.company_id, c.company_name, c.industry, c.scale, c.enterprise_certified,
               e.ai_examiner, e.ai_examiner_desc, e.oversea_remainder,
               e.resume_threshold, e.degree_lower_limit as tool_degree_lower_limit,
               e.experience_lower_limit as tool_experience_lower_limit,
               e.experience_upper_limit as tool_experience_upper_limit, e.age_lower_limit,
               e.age_upper_limit,e.college, e.major, e.gender, e.residentia_address,
               f.id, f.key_word
        from t_position a
        left join t_user b on a.user_id = b.user_id
        left join t_hr d on a.user_id = d.user_id
        left join t_company c on d.company_id = c.company_id
        left join t_position_toolbox e on a.position_id = e.position_id
        left join t_position_key_word f on a.position_id = f.position_id
        where a.position_status = 2
            <!-- 岗位关键词精确匹配 -->
            <if test="keyWord != null and keyWord != ''">
                and EXISTS (
                    SELECT 1
                    FROM t_position_key_word k
                    WHERE k.position_id = a.position_id
                    AND k.key_word = #{keyWord}
                 )
            </if>
            <if test="scale != null and scale != ''">
                and c.scale = #{scale}
            </if>
            <if test="positionName != null and positionName != ''">
                and a.position_name like concat('%',#{positionName},'%')
            </if>
            <if test="workType != null and workType != ''">
                and a.work_type = #{workType}
            </if>
            <if test="salaryLowerLimit != null">
                and a.salary_lower_limit &gt;= #{salaryLowerLimit}
            </if>
            <if test="salaryUpperLimit != null">
                and a.salary_upper_limit &lt;= #{salaryUpperLimit}
            </if>
            <if test="experienceLowerLimit != null">
                and a.experience_lower_limit &gt;= #{experienceLowerLimit}
            </if>
            <if test="degreeLowerLimit != null">
                and a.degree_lower_limit &gt;= #{degreeLowerLimit}
            </if>
            <if test="jobCategory != null and jobCategory != ''">
                and a.job_category = #{jobCategory}
            </if>
            <if test="positionType != null and positionType != ''">
                and a.position_type = #{positionType}
            </if>
  </select>
  <select id="selectPositionList" resultType="com.example.resp.PositionListResp">
    SELECT
        <include refid="Base_Column_List" />,
        COUNT(b.position_id) AS newResumeNum
    FROM
        t_position a
    LEFT JOIN
        t_hr_mark_resume b ON a.position_id = b.position_id and b.hr_user_id = #{userId}
        AND b.resume_status = 'new_message'
    <where>
        a.user_id = #{userId}
        <if test="positionStatus != null and positionStatus != ''">
            and a.position_status = #{positionStatus}
        </if>
    </where>
    GROUP BY
        <include refid="Base_Column_List" />
    order by a.update_time desc
  </select>

  <select id="queryPositionManageList" resultType="com.example.resp.QueryPositionManageResp">
        select
        a.position_id,
        a.position_type ,
        a.position_name,
        a.position_status,
        a.update_time,
        a.job_category,
        c.company_name,
        b.name as hr_name
        from t_position a
        left join t_hr b on a.user_id = b.user_id
        left join t_company c on b.company_id = c.company_id
        <where>
            <if test="positionStatus != null and positionStatus != ''">
                and a.position_status = #{positionStatus}
            </if>
        </where>
        order by a.update_time desc
  </select>

</mapper>